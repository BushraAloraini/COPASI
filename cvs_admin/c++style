# ASTYLE=/export/home/shoops/projects/copasi_dev/cvs_admin/astyle
# GAWK=gawk
# MV=mv

ASTYLE=/home/shoops/projects/copasi_dev/cvs_admin/astyle
GAWK=/usr/bin/gawk
MV=/bin/mv

$GAWK -- '
BEGIN {
  CheckCVSHeader = 1
}

{
  if (CheckCVSHeader == 1) {
    if ($0 !~ ".*Begin CVS Header.*") {
      printf "/* Begin CVS Header\n"
      printf "    $Source: /Volumes/Home/Users/shoops/cvs/copasi_dev/cvs_admin/c++style,v $\n"
      printf "    $Revision: 1.20 $\n"
      printf "    $Name:  $\n"
      printf "    $Author: shoops $ \n"
      printf "    $Date: 2006/04/25 20:51:05 $\n"
      printf "    End CVS Header */\n\n"
      printf " Copyright © 2005 by Pedro Mendes, Virginia Tech Intellectual\n"
      printf " Properties, Inc. and EML Research, gGmbH.\n"
      printf " All rights reserved.\n\n"
      print $0
    } else {
      print $0
    } 
    CheckCVSHeader = 2
  } else if (CheckCVSHeader == 2) {
    if ($0 ~ " All rights reserved") {
      printf " All rights reserved.\n"
      CheckCVSHeader = 0
    } else {
      printf " %s\n", $0
    }
  } else {
    print $0
  }
}
' $1 | \
$ASTYLE --mode=c \
        --style=gnu \
        --one-line=keep-statements \
        --one-line=keep-blocks \
        --pad=oper \
        --convert-tabs \
        --min-conditional=0 \
        |\
$GAWK -- '
BEGIN {
  lastEmpty = 0
  lastOpenBracket = 0
  lastClosingBracket = 0
}

END {
  if (lastClosingBracket == 1) {
    printf "\n"
  }
}

$0 ~ "^$" {
  if (lastOpenBracket == 0) {
    lastEmpty = 1
  }
}

$0 !~ "^$" {
  if (lastEmpty == 1) {
    if ($0 !~ "^ *}.*$") printf "\n"
    lastEmpty = 0
  }

  if (lastClosingBracket == 1) {
    if ($0 !~ "^ *;")  printf "\n"
    lastClosingBracket = 0
  }

  gsub(/\( +/, "(")
  gsub(/ +)/, ")")
  gsub(/\{ +/, "{")
  gsub(/^\*/, " *")
        
  $0 = gensub(/ +;$/, ";", "g")
  $0 = gensub(/([^ ]) +}$/, "\\1}", "g")
  $0 = gensub(/case (.*) *: /, "case \\1:", "g")
  $0 = gensub(/if (.*\|\| +) \//, "if \\1/", "g")
  $0 = gensub(/(.*)=( +) \//, "\\1=\\2/", "g")
  
  if ($0 ~ ".*}$") {
    lastClosingBracket = 1
    printf "%s", $0
  }
  else {
    lastClosingBracket = 0
    printf "%s\n", $0
  }

  if ($0 ~ "{$") lastOpenBracket = 1
  else lastOpenBracket = 0
}
' > $1.tmp && \
$MV -f $1.tmp $1
