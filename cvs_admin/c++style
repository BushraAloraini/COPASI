#!/bin/bash

# ASTYLE=/home/shoops/development/copasi_dev/cvs_admin/astyle
ASTYLE=/home/shoops/projects/copasi_dev/cvs_admin/astyle

GAWK=gawk
MV=mv

$GAWK -- '
BEGIN {
  CVSHeader = 0
}

{
  if (CVSHeader == 0) {
    if ($0 ~ "/\\* Begin CVS Header.*") {
      printf "// Begin CVS Header \n"
      printf "//   $Source: /Volumes/Home/Users/shoops/cvs/copasi_dev/cvs_admin/c++style,v $ \n"
      printf "//   $Revision: 1.28 $ \n"
      printf "//   $Name:  $ \n"
      printf "//   $Author: shoops $ \n"
      printf "//   $Date: 2007/01/12 17:58:48 $ \n"
      printf "// End CVS Header \n"
      CVSHeader = 1
    } else if ($0 ~ "// Begin CVS Header.*") {
      CVSHeader = 2
    }
  } else if (CVSHeader == 1) {
    if ($0 ~ ".* End CVS Header.*") {
      CVSHeader = 2
    }
  } else {
    print $0
  }
}
' $1 | \
$ASTYLE --mode=c \
        --style=gnu \
        --one-line=keep-statements \
        --one-line=keep-blocks \
        --pad=oper \
        --convert-tabs \
        --min-conditional=0 \
        |\
$GAWK -- '
BEGIN {
  lastEmpty = 0
  lastOpenBracket = 0
  lastClosingBracket = 0
}

END {
  if (lastClosingBracket == 1) {
    printf "\n"
  }
}

$0 ~ "^ *$" {
  lastEmpty = 1
}

$0 !~ "^ *$" {
  if (lastEmpty == 1) {
    if ($0 !~ "^ *}.*$") printf "\n"
    lastEmpty = 0
  }

  if (lastClosingBracket == 1) {
    if ($0 !~ "^ *;")  printf "\n"
    lastClosingBracket = 0
  }

  gsub(/ +$/, "")
  gsub(/\( +/, "(")
  gsub(/ +)/, ")")
  gsub(/\{ +/, "{")
  gsub(/^\*/, " *")
  gsub(/; +}/, ";}")
  gsub(/^ +#/, "#")

  $0 = gensub(/([,&+]) ( +\/)/, "\\1\\2", 1)
  $0 = gensub(/(C_INT operator\(\) \(evalF f,)/, "\\1 ", 1)
 
  $0 = gensub(/ +;$/, ";", "g")
  $0 = gensub(/([^ ]) +}$/, "\\1}", "g")
  
  $0 = gensub(/case *([^ ]*) +:/, "case \\1:", "g")
  $0 = gensub(/^( *[^ ]+): ( +\/)/, "\\1:\\2", "g")
  $0 = gensub(/(case [0-9]+): ( +)/, "\\1:\\2", "g")
  $0 = gensub(/(case .\\..): ( +)/, "\\1:\\2", "g")
  $0 = gensub(/(case [^ ]+::[^ ]+): ( +)/, "\\1:\\2", "g")
  $0 = gensub(/if (.*\|\| +) \//, "if \\1/", "g")
  $0 = gensub(/(.*)=( +) \//, "\\1=\\2/", "g")
  
  if ($0 ~ ".*}$") {
    lastClosingBracket = 1
    printf "%s", $0
  }
  else {
    lastClosingBracket = 0
    printf "%s\n", $0
  }

  if ($0 ~ "{$") {
    lastOpenBracket = 1
  } else {
    lastOpenBracket = 0
  }
}
' > $1.tmp && \
$MV -f $1.tmp $1
