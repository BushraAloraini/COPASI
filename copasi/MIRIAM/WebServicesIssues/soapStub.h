// Begin CVS Header
//   $Source: /Volumes/Home/Users/shoops/cvs/copasi_dev/copasi/MIRIAM/WebServicesIssues/soapStub.h,v $
//   $Revision: 1.3 $
//   $Name:  $
//   $Author: aruff $
//   $Date: 2008/09/17 17:41:51 $
// End CVS Header

// Copyright (C) 2008 by Pedro Mendes, Virginia Tech Intellectual
// Properties, Inc., EML Research, gGmbH, University of Heidelberg,
// and The University of Manchester.
// All rights reserved.

/* soapStub.h
   Generated by gSOAP 2.7.11 from miriam.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
 */

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/

#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ArrayOf_USCORExsd_USCOREstring
#define SOAP_TYPE_ArrayOf_USCORExsd_USCOREstring (7)
/* SOAP encoded array of xsd:string schema type: */
class SOAP_CMAC ArrayOf_USCORExsd_USCOREstring
  {
  public:
    char **__ptr;
    int __size;
    struct soap *soap; /* transient */
  public:
    virtual int soap_type() const {return 7;} /* = unique id SOAP_TYPE_ArrayOf_USCORExsd_USCOREstring */
    virtual void soap_default(struct soap*);
    virtual void soap_serialize(struct soap*) const;
    virtual int soap_put(struct soap*, const char*, const char*) const;
    virtual int soap_out(struct soap*, const char*, int, const char*) const;
    virtual void *soap_get(struct soap*, const char*, const char*);
    virtual void *soap_in(struct soap*, const char*, const char*);
    ArrayOf_USCORExsd_USCOREstring() : __ptr(NULL), __size(0), soap(NULL) {}
    virtual ~ArrayOf_USCORExsd_USCOREstring() {}};
#endif

#ifndef SOAP_TYPE_ns2__getNameResponse
#define SOAP_TYPE_ns2__getNameResponse (12)
/* ns2:getNameResponse */
struct ns2__getNameResponse
  {
public:
    char *_getNameReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getName
#define SOAP_TYPE_ns2__getName (13)
/* ns2:getName */
struct ns2__getName
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocationResponse
#define SOAP_TYPE_ns2__getLocationResponse (15)
/* ns2:getLocationResponse */
struct ns2__getLocationResponse
  {
public:
    char *_getLocationReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocation
#define SOAP_TYPE_ns2__getLocation (16)
/* ns2:getLocation */
struct ns2__getLocation
  {
public:
    char *_uri; /* optional element of type xsd:string */
    char *_resource; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURLResponse
#define SOAP_TYPE_ns2__getURLResponse (18)
/* ns2:getURLResponse */
struct ns2__getURLResponse
  {
public:
    char *_getURLReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURL
#define SOAP_TYPE_ns2__getURL (19)
/* ns2:getURL */
struct ns2__getURL
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURIResponse
#define SOAP_TYPE_ns2__getURIResponse (21)
/* ns2:getURIResponse */
struct ns2__getURIResponse
  {
public:
    char *_getURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURI
#define SOAP_TYPE_ns2__getURI (22)
/* ns2:getURI */
struct ns2__getURI
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURI_Response
#define SOAP_TYPE_ns2__getURI_Response (24)
/* ns2:getURI-Response */
struct ns2__getURI_Response
  {
public:
    char *_getURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURI_
#define SOAP_TYPE_ns2__getURI_ (25)
/* ns2:getURI */
struct ns2__getURI_
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getServicesInfoResponse
#define SOAP_TYPE_ns2__getServicesInfoResponse (27)
/* ns2:getServicesInfoResponse */
struct ns2__getServicesInfoResponse
  {
public:
    char *getServicesInfoReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getServicesInfo
#define SOAP_TYPE_ns2__getServicesInfo (28)
/* ns2:getServicesInfo */
struct ns2__getServicesInfo
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_ns2__getServicesVersionResponse
#define SOAP_TYPE_ns2__getServicesVersionResponse (30)
/* ns2:getServicesVersionResponse */
struct ns2__getServicesVersionResponse
  {
public:
    char *getServicesVersionReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getServicesVersion
#define SOAP_TYPE_ns2__getServicesVersion (31)
/* ns2:getServicesVersion */
struct ns2__getServicesVersion
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_ns2__getJavaLibraryVersionResponse
#define SOAP_TYPE_ns2__getJavaLibraryVersionResponse (33)
/* ns2:getJavaLibraryVersionResponse */
struct ns2__getJavaLibraryVersionResponse
  {
public:
    char *getJavaLibraryVersionReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getJavaLibraryVersion
#define SOAP_TYPE_ns2__getJavaLibraryVersion (34)
/* ns2:getJavaLibraryVersion */
struct ns2__getJavaLibraryVersion
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURNResponse
#define SOAP_TYPE_ns2__getDataTypeURNResponse (36)
/* ns2:getDataTypeURNResponse */
struct ns2__getDataTypeURNResponse
  {
public:
    char *_getDataTypeURNReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURN
#define SOAP_TYPE_ns2__getDataTypeURN (37)
/* ns2:getDataTypeURN */
struct ns2__getDataTypeURN
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURNsResponse
#define SOAP_TYPE_ns2__getDataTypeURNsResponse (38)
/* ns2:getDataTypeURNsResponse */
struct ns2__getDataTypeURNsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeURNsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURNs
#define SOAP_TYPE_ns2__getDataTypeURNs (42)
/* ns2:getDataTypeURNs */
struct ns2__getDataTypeURNs
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURLResponse
#define SOAP_TYPE_ns2__getDataTypeURLResponse (44)
/* ns2:getDataTypeURLResponse */
struct ns2__getDataTypeURLResponse
  {
public:
    char *_getDataTypeURLReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURL
#define SOAP_TYPE_ns2__getDataTypeURL (45)
/* ns2:getDataTypeURL */
struct ns2__getDataTypeURL
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURLsResponse
#define SOAP_TYPE_ns2__getDataTypeURLsResponse (46)
/* ns2:getDataTypeURLsResponse */
struct ns2__getDataTypeURLsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeURLsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURLs
#define SOAP_TYPE_ns2__getDataTypeURLs (49)
/* ns2:getDataTypeURLs */
struct ns2__getDataTypeURLs
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURIResponse
#define SOAP_TYPE_ns2__getDataTypeURIResponse (51)
/* ns2:getDataTypeURIResponse */
struct ns2__getDataTypeURIResponse
  {
public:
    char *_getDataTypeURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURI
#define SOAP_TYPE_ns2__getDataTypeURI (52)
/* ns2:getDataTypeURI */
struct ns2__getDataTypeURI
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURI_Response
#define SOAP_TYPE_ns2__getDataTypeURI_Response (54)
/* ns2:getDataTypeURI-Response */
struct ns2__getDataTypeURI_Response
  {
public:
    char *_getDataTypeURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURI_
#define SOAP_TYPE_ns2__getDataTypeURI_ (55)
/* ns2:getDataTypeURI */
struct ns2__getDataTypeURI_
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURIsResponse
#define SOAP_TYPE_ns2__getDataTypeURIsResponse (56)
/* ns2:getDataTypeURIsResponse */
struct ns2__getDataTypeURIsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeURIsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURIs
#define SOAP_TYPE_ns2__getDataTypeURIs (59)
/* ns2:getDataTypeURIs */
struct ns2__getDataTypeURIs
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURIsResponse_
#define SOAP_TYPE_ns2__getDataTypeURIsResponse_ (60)
/* ns2:getDataTypeURIsResponse */
struct ns2__getDataTypeURIsResponse_
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeURIsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeURIs_
#define SOAP_TYPE_ns2__getDataTypeURIs_ (63)
/* ns2:getDataTypeURIs */
struct ns2__getDataTypeURIs_
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_type; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeAllURIsResponse
#define SOAP_TYPE_ns2__getDataTypeAllURIsResponse (64)
/* ns2:getDataTypeAllURIsResponse */
struct ns2__getDataTypeAllURIsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeAllURIsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeAllURIs
#define SOAP_TYPE_ns2__getDataTypeAllURIs (67)
/* ns2:getDataTypeAllURIs */
struct ns2__getDataTypeAllURIs
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURNResponse
#define SOAP_TYPE_ns2__getURNResponse (69)
/* ns2:getURNResponse */
struct ns2__getURNResponse
  {
public:
    char *_getURNReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getURN
#define SOAP_TYPE_ns2__getURN (70)
/* ns2:getURN */
struct ns2__getURN
  {
public:
    char *_name; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeDefResponse
#define SOAP_TYPE_ns2__getDataTypeDefResponse (72)
/* ns2:getDataTypeDefResponse */
struct ns2__getDataTypeDefResponse
  {
public:
    char *_getDataTypeDefReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeDef
#define SOAP_TYPE_ns2__getDataTypeDef (73)
/* ns2:getDataTypeDef */
struct ns2__getDataTypeDef
  {
public:
    char *_nickname; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntriesResponse
#define SOAP_TYPE_ns2__getDataEntriesResponse (74)
/* ns2:getDataEntriesResponse */
struct ns2__getDataEntriesResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataEntriesReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntries
#define SOAP_TYPE_ns2__getDataEntries (77)
/* ns2:getDataEntries */
struct ns2__getDataEntries
  {
public:
    char *_nickname; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntriesResponse_
#define SOAP_TYPE_ns2__getDataEntriesResponse_ (78)
/* ns2:getDataEntriesResponse */
struct ns2__getDataEntriesResponse_
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataEntriesReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntries_
#define SOAP_TYPE_ns2__getDataEntries_ (81)
/* ns2:getDataEntries */
struct ns2__getDataEntries_
  {
public:
    char *_nickname; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocationsResponse
#define SOAP_TYPE_ns2__getLocationsResponse (82)
/* ns2:getLocationsResponse */
struct ns2__getLocationsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getLocationsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocations
#define SOAP_TYPE_ns2__getLocations (85)
/* ns2:getLocations */
struct ns2__getLocations
  {
public:
    char *_nickname; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocationsResponse_
#define SOAP_TYPE_ns2__getLocationsResponse_ (86)
/* ns2:getLocationsResponse */
struct ns2__getLocationsResponse_
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getLocationsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getLocations_
#define SOAP_TYPE_ns2__getLocations_ (89)
/* ns2:getLocations */
struct ns2__getLocations_
  {
public:
    char *_nickname; /* optional element of type xsd:string */
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntryResponse
#define SOAP_TYPE_ns2__getDataEntryResponse (91)
/* ns2:getDataEntryResponse */
struct ns2__getDataEntryResponse
  {
public:
    char *_getDataEntryReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataEntry
#define SOAP_TYPE_ns2__getDataEntry (92)
/* ns2:getDataEntry */
struct ns2__getDataEntry
  {
public:
    char *_uri; /* optional element of type xsd:string */
    char *_resource; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataResourcesResponse
#define SOAP_TYPE_ns2__getDataResourcesResponse (93)
/* ns2:getDataResourcesResponse */
struct ns2__getDataResourcesResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataResourcesReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataResources
#define SOAP_TYPE_ns2__getDataResources (96)
/* ns2:getDataResources */
struct ns2__getDataResources
  {
public:
    char *_nickname; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__isDeprecatedResponse
#define SOAP_TYPE_ns2__isDeprecatedResponse (98)
/* ns2:isDeprecatedResponse */
struct ns2__isDeprecatedResponse
  {
public:
    char *_isDeprecatedReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__isDeprecated
#define SOAP_TYPE_ns2__isDeprecated (99)
/* ns2:isDeprecated */
struct ns2__isDeprecated
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getOfficialURIResponse
#define SOAP_TYPE_ns2__getOfficialURIResponse (101)
/* ns2:getOfficialURIResponse */
struct ns2__getOfficialURIResponse
  {
public:
    char *_getOfficialURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getOfficialURI
#define SOAP_TYPE_ns2__getOfficialURI (102)
/* ns2:getOfficialURI */
struct ns2__getOfficialURI
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getOfficialDataTypeURIResponse
#define SOAP_TYPE_ns2__getOfficialDataTypeURIResponse (104)
/* ns2:getOfficialDataTypeURIResponse */
struct ns2__getOfficialDataTypeURIResponse
  {
public:
    char *_getOfficialDataTypeURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getOfficialDataTypeURI
#define SOAP_TYPE_ns2__getOfficialDataTypeURI (105)
/* ns2:getOfficialDataTypeURI */
struct ns2__getOfficialDataTypeURI
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getMiriamURIResponse
#define SOAP_TYPE_ns2__getMiriamURIResponse (107)
/* ns2:getMiriamURIResponse */
struct ns2__getMiriamURIResponse
  {
public:
    char *_getMiriamURIReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getMiriamURI
#define SOAP_TYPE_ns2__getMiriamURI (108)
/* ns2:getMiriamURI */
struct ns2__getMiriamURI
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypePatternResponse
#define SOAP_TYPE_ns2__getDataTypePatternResponse (110)
/* ns2:getDataTypePatternResponse */
struct ns2__getDataTypePatternResponse
  {
public:
    char *_getDataTypePatternReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypePattern
#define SOAP_TYPE_ns2__getDataTypePattern (111)
/* ns2:getDataTypePattern */
struct ns2__getDataTypePattern
  {
public:
    char *_nickname; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceInfoResponse
#define SOAP_TYPE_ns2__getResourceInfoResponse (113)
/* ns2:getResourceInfoResponse */
struct ns2__getResourceInfoResponse
  {
public:
    char *_getResourceInfoReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceInfo
#define SOAP_TYPE_ns2__getResourceInfo (114)
/* ns2:getResourceInfo */
struct ns2__getResourceInfo
  {
public:
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceInstitutionResponse
#define SOAP_TYPE_ns2__getResourceInstitutionResponse (116)
/* ns2:getResourceInstitutionResponse */
struct ns2__getResourceInstitutionResponse
  {
public:
    char *_getResourceInstitutionReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceInstitution
#define SOAP_TYPE_ns2__getResourceInstitution (117)
/* ns2:getResourceInstitution */
struct ns2__getResourceInstitution
  {
public:
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceLocationResponse
#define SOAP_TYPE_ns2__getResourceLocationResponse (119)
/* ns2:getResourceLocationResponse */
struct ns2__getResourceLocationResponse
  {
public:
    char *_getResourceLocationReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getResourceLocation
#define SOAP_TYPE_ns2__getResourceLocation (120)
/* ns2:getResourceLocation */
struct ns2__getResourceLocation
  {
public:
    char *_id; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeSynonymsResponse
#define SOAP_TYPE_ns2__getDataTypeSynonymsResponse (121)
/* ns2:getDataTypeSynonymsResponse */
struct ns2__getDataTypeSynonymsResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getDataTypeSynonymsReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypeSynonyms
#define SOAP_TYPE_ns2__getDataTypeSynonyms (124)
/* ns2:getDataTypeSynonyms */
struct ns2__getDataTypeSynonyms
  {
public:
    char *_name; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getNamesResponse
#define SOAP_TYPE_ns2__getNamesResponse (125)
/* ns2:getNamesResponse */
struct ns2__getNamesResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *_getNamesReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getNames
#define SOAP_TYPE_ns2__getNames (128)
/* ns2:getNames */
struct ns2__getNames
  {
public:
    char *_uri; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypesNameResponse
#define SOAP_TYPE_ns2__getDataTypesNameResponse (129)
/* ns2:getDataTypesNameResponse */
struct ns2__getDataTypesNameResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *getDataTypesNameReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypesName
#define SOAP_TYPE_ns2__getDataTypesName (132)
/* ns2:getDataTypesName */
struct ns2__getDataTypesName
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypesIdResponse
#define SOAP_TYPE_ns2__getDataTypesIdResponse (133)
/* ns2:getDataTypesIdResponse */
struct ns2__getDataTypesIdResponse
  {
public:
    ArrayOf_USCORExsd_USCOREstring *getDataTypesIdReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* optional element of type ArrayOfstring */
  };
#endif

#ifndef SOAP_TYPE_ns2__getDataTypesId
#define SOAP_TYPE_ns2__getDataTypesId (136)
/* ns2:getDataTypesId */
struct ns2__getDataTypesId
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_ns2__checkRegExpResponse
#define SOAP_TYPE_ns2__checkRegExpResponse (138)
/* ns2:checkRegExpResponse */
struct ns2__checkRegExpResponse
  {
public:
    char *_checkRegExpReturn; /* SOAP 1.2 RPC return element (when namespace qualified) */ /* required element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_ns2__checkRegExp
#define SOAP_TYPE_ns2__checkRegExp (139)
/* ns2:checkRegExp */
struct ns2__checkRegExp
  {
public:
    char *_identifier; /* optional element of type xsd:string */
    char *_datatype; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (140)
/* SOAP Header: */
struct SOAP_ENV__Header
  {
#ifdef WITH_NOEMPTYSTRUCT
private:
    char dummy; /* dummy member to enable compilation */
#endif
  };
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (141)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
  {
public:
    char *SOAP_ENV__Value; /* optional element of type xsd:QName */
    struct SOAP_ENV__Code *SOAP_ENV__Subcode; /* optional element of type SOAP-ENV:Code */
  };
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (143)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
  {
public:
    int __type; /* any type of element <fault> (defined below) */
    void *fault; /* transient */
    char *__any;
  };
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (146)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
  {
public:
    char *SOAP_ENV__Text; /* optional element of type xsd:string */
  };
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (147)
/* SOAP Fault: */
struct SOAP_ENV__Fault
  {
public:
    char *faultcode; /* optional element of type xsd:QName */
    char *faultstring; /* optional element of type xsd:string */
    char *faultactor; /* optional element of type xsd:string */
    struct SOAP_ENV__Detail *detail; /* optional element of type SOAP-ENV:Detail */
    struct SOAP_ENV__Code *SOAP_ENV__Code; /* optional element of type SOAP-ENV:Code */
    struct SOAP_ENV__Reason *SOAP_ENV__Reason; /* optional element of type SOAP-ENV:Reason */
    char *SOAP_ENV__Node; /* optional element of type xsd:string */
    char *SOAP_ENV__Role; /* optional element of type xsd:string */
    struct SOAP_ENV__Detail *SOAP_ENV__Detail; /* optional element of type SOAP-ENV:Detail */
  };
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/

#endif

/* End of soapStub.h */
