<?xml version="1.0" encoding="UTF-8"?>
<!-- Begin CVS Header -->
<!--   $Source: /Volumes/Home/Users/shoops/cvs/copasi_dev/copasi/xml/CopasiML.xsd,v $ -->
<!--   $Revision: 1.1 $ -->
<!--   $Name:  $ -->
<!--   $Author: shoops $ -->
<!--   $Date: 2011/03/07 19:35:35 $ -->
<!-- End CVS Header -->

<!-- Copyright (C) 2011 by Pedro Mendes, Virginia Tech Intellectual -->
<!-- Properties, Inc., University of Heidelberg, and The University -->
<!-- of Manchester. -->
<!-- All rights reserved. -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://www.copasi.org/static/schema"
  xmlns:x="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.copasi.org/static/schema">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="x.xsd"/>
  <xs:element name="COPASI">
    <xs:annotation>
      <xs:documentation> This is the only top element of a CopasiML file. It contains the models as
        well as the task information. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ListOfFunctions"/>
        <xs:element minOccurs="0" ref="Model"/>
        <xs:element minOccurs="0" ref="ListOfTasks"/>
        <xs:element minOccurs="0" ref="ListOfReports"/>
        <xs:element minOccurs="0" ref="ListOfPlots"/>
        <xs:element minOccurs="0" ref="GUI"/>
        <xs:element minOccurs="0" ref="ListOfLayouts"/>
        <xs:element minOccurs="0" ref="SBMLReference"/>
        <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip">
          <xs:annotation>
            <xs:documentation> We explicitedly allow the addition of elements which are not in the
              CopasiML name space so that this may be expandend by other user to suit their needs.
            </xs:documentation>
          </xs:annotation>
        </xs:any>
      </xs:sequence>
      <xs:attribute name="versionMajor" use="required" type="xs:integer"/>
      <xs:attribute name="versionMinor" use="required" type="xs:integer"/>
      <xs:attribute name="versionDevel" use="required" type="xs:integer"/>
      <xs:anyAttribute namespace="##other" processContents="skip"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfFunctions" type="listOfFunctions.datatype"/>
  <xs:element name="Model" type="model.datatype"/>
  <xs:element name="ListOfTasks" type="listOfTasks.datatype"/>
  <xs:element name="ListOfReports" type="listOfReportSpecifications.datatype"/>
  <xs:element name="ListOfPlots" type="listOfPlotSpecifications.datatype"/>
  <xs:element name="GUI" type="gui.datatype"/>
  <xs:element name="ListOfLayouts" type="listOfLayouts.datatype"/>
  <xs:element name="SBMLReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SBMLMap"/>
      </xs:sequence>
      <xs:attribute name="file" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SBMLMap">
    <xs:complexType>
      <xs:attribute name="COPASIkey" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:IDREF">
            <xs:pattern value="[_a-zA-Z]+_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="SBMLid" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="[_a-zA-Z][_a-zA-Z0-9]*"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="reactionParticipant.datatype">
    <xs:attribute name="stoichiometry" use="required" type="xs:double"/>
    <xs:attribute name="metabolite" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="Metabolite_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="MiriamAnnotation" type="rdf.datatype"/>
  <xs:attributeGroup name="parameter.datatype">
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="float"/>
          <xs:enumeration value="unsignedFloat"/>
          <xs:enumeration value="integer"/>
          <xs:enumeration value="unsignedInteger"/>
          <xs:enumeration value="bool"/>
          <xs:enumeration value="string"/>
          <xs:enumeration value="cn"/>
          <xs:enumeration value="key"/>
          <xs:enumeration value="file"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="parameterText.datatype">
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="expression"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:complexType name="parameterList.datatype">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ParameterGroup"/>
      <xs:element ref="Parameter"/>
      <xs:element ref="ParameterText"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ParameterGroup">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="parameterList.datatype">
          <xs:attributeGroup ref="name.attribute"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Parameter">
    <xs:complexType>
      <xs:attributeGroup ref="parameter.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ParameterText">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="parameterText.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Comment" type="xhtml.datatype"/>
  <xs:attributeGroup name="name.attribute">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[\S ]+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:simpleType name="expression.simpletype">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="xhtml.datatype" mixed="true">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="http://www.w3.org/1999/xhtml"
        processContents="skip"/>
    </xs:sequence>
  </xs:complexType>
  <!--
      <define name="rdf.datatype">
      <grammar>
        <include href="rdfxml.rng" ns="http://relaxng.org/ns/structure/1.0"/>
      </grammar>
    </define>
  -->
  <xs:complexType name="rdf.datatype">
    <xs:sequence>
      <xs:any namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#" processContents="skip"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="rdfContent.datatype">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="reportSection.datatype">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="Object"/>
      <xs:element ref="html"/>
      <xs:element name="Report">
        <xs:complexType>
          <xs:attribute name="reference" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:IDREF">
                <xs:pattern value="Report_\d+"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:element name="html" type="xhtml.datatype"/>
  <xs:complexType name="listOfFunctions.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Function"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Function">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="MiriamAnnotation"/>
        <xs:element ref="Expression"/>
        <xs:element minOccurs="0" ref="ListOfParameterDescriptions"/>
      </xs:sequence>
      <xs:attributeGroup ref="name.attribute"/>
      <xs:attribute name="key" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:ID">
            <xs:pattern value="Function_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="MassAction"/>
            <xs:enumeration value="PreDefined"/>
            <xs:enumeration value="UserDefined"/>
            <xs:enumeration value="Function"/>
            <xs:enumeration value="Expression"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="reversible" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="unspecified"/>
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfParameterDescriptions" type="listOfParameterDescriptions.datatype"/>
  <xs:complexType name="listOfParameterDescriptions.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ParameterDescription"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ParameterDescription">
    <xs:complexType>
      <xs:attributeGroup ref="parameterDescription.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="parameterDescription.datatype">
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="FunctionParameter_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="order" use="required" type="xs:nonNegativeInteger"/>
    <xs:attribute name="role" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="product"/>
          <xs:enumeration value="volume"/>
          <xs:enumeration value="time"/>
          <xs:enumeration value="modifier"/>
          <xs:enumeration value="variable"/>
          <xs:enumeration value="substrate"/>
          <xs:enumeration value="constant"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:complexType name="model.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element minOccurs="0" ref="Comment"/>
      <xs:element minOccurs="0" ref="InitialExpression"/>
      <xs:element minOccurs="0" ref="ListOfCompartments"/>
      <xs:element minOccurs="0" ref="ListOfMetabolites"/>
      <xs:element minOccurs="0" ref="ListOfModelValues"/>
      <xs:element minOccurs="0" ref="ListOfReactions"/>
      <xs:element minOccurs="0" ref="ListOfEvents"/>
      <xs:element minOccurs="0" ref="StateTemplate"/>
      <xs:element minOccurs="0" ref="InitialState"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Model_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="simulationType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="time"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="timeUnit" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="d"/>
          <xs:enumeration value="ps"/>
          <xs:enumeration value="ms"/>
          <xs:enumeration value="fs"/>
          <xs:enumeration value="µs"/>
          <xs:enumeration value="min"/>
          <xs:enumeration value="h"/>
          <xs:enumeration value="ns"/>
          <xs:enumeration value="s"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="volumeUnit" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="pl"/>
          <xs:enumeration value="m³"/>
          <xs:enumeration value="nl"/>
          <xs:enumeration value="µl"/>
          <xs:enumeration value="l"/>
          <xs:enumeration value="fl"/>
          <xs:enumeration value="ml"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="areaUnit" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="µm²"/>
          <xs:enumeration value="mm²"/>
          <xs:enumeration value="pm²"/>
          <xs:enumeration value="nm²"/>
          <xs:enumeration value="m²"/>
          <xs:enumeration value="cm²"/>
          <xs:enumeration value="fm²"/>
          <xs:enumeration value="dm²"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="lengthUnit" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="m"/>
          <xs:enumeration value="fm"/>
          <xs:enumeration value="mm"/>
          <xs:enumeration value="dm"/>
          <xs:enumeration value="cm"/>
          <xs:enumeration value="pm"/>
          <xs:enumeration value="nm"/>
          <xs:enumeration value="µm"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="quantityUnit" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="mmol"/>
          <xs:enumeration value="µmol"/>
          <xs:enumeration value="fmol"/>
          <xs:enumeration value="mol"/>
          <xs:enumeration value="pmol"/>
          <xs:enumeration value="#"/>
          <xs:enumeration value="nmol"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="stochastic"/>
          <xs:enumeration value="deterministic"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="ListOfCompartments" type="listOfCompartments.datatype"/>
  <xs:element name="ListOfMetabolites" type="listOfMetabolites.datatype"/>
  <xs:element name="ListOfModelValues" type="listOfModelValues.datatype"/>
  <xs:element name="ListOfReactions" type="listOfReactions.datatype"/>
  <xs:element name="ListOfEvents" type="listOfEvents.datatype"/>
  <xs:element name="StateTemplate">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="StateTemplateVariable"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StateTemplateVariable">
    <xs:complexType>
      <xs:attribute name="objectReference" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:IDREF">
            <xs:pattern value="(Model|Metabolite|Compartment|ModelValue)_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="InitialState">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:list itemType="xs:double"/>
          </xs:simpleType>
          <xs:attribute name="type" use="required" type="xs:string"/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="listOfCompartments.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Compartment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Compartment" type="compartment.datatype"/>
  <xs:complexType name="compartment.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element minOccurs="0" ref="Expression"/>
      <xs:element minOccurs="0" ref="InitialExpression"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Compartment_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="simulationType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ode"/>
          <xs:enumeration value="assignment"/>
          <xs:enumeration value="fixed"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dimensionality" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="3"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="listOfMetabolites.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Metabolite"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Metabolite" type="metabolite.datatype"/>
  <xs:complexType name="metabolite.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element minOccurs="0" ref="Expression"/>
      <xs:element minOccurs="0" ref="InitialExpression"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Metabolite_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="compartment" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="Compartment_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="simulationType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ode"/>
          <xs:enumeration value="assignment"/>
          <xs:enumeration value="reactions"/>
          <xs:enumeration value="fixed"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="listOfModelValues.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ModelValue"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ModelValue" type="modelValue.datatype"/>
  <xs:complexType name="modelValue.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element minOccurs="0" ref="Expression"/>
      <xs:element minOccurs="0" ref="InitialExpression"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="ModelValue_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="simulationType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ode"/>
          <xs:enumeration value="assignment"/>
          <xs:enumeration value="fixed"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="listOfReactions.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Reaction"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Reaction" type="reaction.datatype"/>
  <xs:complexType name="reaction.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element minOccurs="0" ref="ListOfSubstrates"/>
      <xs:element minOccurs="0" ref="ListOfProducts"/>
      <xs:element minOccurs="0" ref="ListOfModifiers"/>
      <xs:element minOccurs="0" ref="ListOfConstants"/>
      <xs:element minOccurs="0" ref="KineticLaw"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Reaction_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="reversible" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="ListOfSubstrates">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="Substrate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Substrate">
    <xs:complexType>
      <xs:attributeGroup ref="reactionParticipant.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfProducts">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="Product"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Product">
    <xs:complexType>
      <xs:attributeGroup ref="reactionParticipant.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfModifiers">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="Modifier"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Modifier">
    <xs:complexType>
      <xs:attributeGroup ref="reactionParticipant.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfConstants" type="listOfConstants.datatype"/>
  <xs:element name="KineticLaw" type="kineticLaw.datatype"/>
  <xs:complexType name="listOfConstants.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Constant"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Constant">
    <xs:complexType>
      <xs:attributeGroup ref="constant.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="constant.datatype">
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Parameter_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="value" use="required" type="xs:double"/>
  </xs:attributeGroup>
  <xs:complexType name="kineticLaw.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ListOfCallParameters"/>
    </xs:sequence>
    <xs:attribute name="function" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="Function_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="ListOfCallParameters" type="listOfCallParameters.datatype"/>
  <xs:complexType name="listOfCallParameters.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="CallParameter"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CallParameter" type="callParameter.datatype"/>
  <xs:complexType name="callParameter.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="SourceParameter"/>
    </xs:sequence>
    <xs:attribute name="functionParameter" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="FunctionParameter_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="SourceParameter">
    <xs:complexType>
      <xs:attribute name="reference" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:IDREF">
            <xs:pattern value="[_a-zA-Z]+_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="listOfEvents.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Event"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Event" type="event.datatype"/>
  <xs:complexType name="event.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="MiriamAnnotation"/>
      <xs:element ref="TriggerExpression"/>
      <xs:element minOccurs="0" ref="DelayExpression"/>
      <xs:element minOccurs="0" ref="ListOfAssignments"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Event_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="order" use="required" type="xs:nonNegativeInteger"/>
    <xs:attribute name="delayAssignment" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="TriggerExpression" type="expression.simpletype"/>
  <xs:element name="DelayExpression" type="expression.simpletype"/>
  <xs:element name="ListOfAssignments" type="listOfEventAssignments.datatype"/>
  <xs:complexType name="listOfEventAssignments.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Assignment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Assignment">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Expression"/>
      </xs:sequence>
      <xs:attribute name="targetKey" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:IDREF">
            <xs:pattern value="(Metabolite|Compartment|ModelValue)_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="listOfTasks.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Task"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Task" type="task.datatype"/>
  <xs:complexType name="task.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" name="Report">
        <xs:complexType>
          <xs:attributeGroup ref="report.datatype"/>
        </xs:complexType>
      </xs:element>
      <xs:element ref="Problem"/>
      <xs:element ref="Method"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Task_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="updateModel" use="required" type="xs:boolean"/>
    <xs:attribute name="scheduled" use="required" type="xs:boolean"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="lyapunovExponents"/>
          <xs:enumeration value="parameterFitting"/>
          <xs:enumeration value="timeCourse"/>
          <xs:enumeration value="moieties"/>
          <xs:enumeration value="sensitivities"/>
          <xs:enumeration value="optimization"/>
          <xs:enumeration value="metabolicControlAnalysis"/>
          <xs:enumeration value="timeScaleSeparationAnalysis"/>
          <xs:enumeration value="scan"/>
          <xs:enumeration value="steadyState"/>
          <xs:enumeration value="fluxMode"/>
          <xs:enumeration value="timeScaleSeparation"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="Problem" type="parameterList.datatype"/>
  <xs:element name="Method">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="parameterList.datatype">
          <xs:attributeGroup ref="name.attribute"/>
          <xs:attribute name="type" use="required" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="report.datatype">
    <xs:attribute name="reference" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="Report_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="target" use="required" type="xs:anyURI"/>
    <xs:attribute name="append" use="required" type="xs:boolean"/>
  </xs:attributeGroup>
  <xs:complexType name="listOfReportSpecifications.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Report" type="reportSpecification.datatype"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="reportSpecification.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="Comment"/>
      <xs:choice>
        <xs:element ref="Table"/>
        <xs:sequence>
          <xs:element minOccurs="0" ref="Header"/>
          <xs:element minOccurs="0" ref="Body"/>
          <xs:element minOccurs="0" ref="Footer"/>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Report_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="name.attribute"/>
    <xs:attribute name="taskType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="lyapunovExponents"/>
          <xs:enumeration value="parameterFitting"/>
          <xs:enumeration value="timeCourse"/>
          <xs:enumeration value="moieties"/>
          <xs:enumeration value="sensitivities"/>
          <xs:enumeration value="optimization"/>
          <xs:enumeration value="metabolicControlAnalysis"/>
          <xs:enumeration value="timeScaleSeparationAnalysis"/>
          <xs:enumeration value="scan"/>
          <xs:enumeration value="steadyState"/>
          <xs:enumeration value="fluxMode"/>
          <xs:enumeration value="timeScaleSeparation"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="precision" use="required" type="xs:unsignedInt"/>
    <xs:attribute name="separator" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:element name="Table">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Object"/>
      </xs:sequence>
      <xs:attribute name="printTitle" use="required" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Header" type="reportSection.datatype"/>
  <xs:element name="Body" type="reportSection.datatype"/>
  <xs:element name="Footer" type="reportSection.datatype"/>
  <xs:complexType name="listOfPlotSpecifications.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="PlotSpecification"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlotSpecification" type="plotSpecification.datatype"/>
  <xs:complexType name="plotSpecification.datatype">
    <xs:complexContent>
      <xs:extension base="parameterList.datatype">
        <xs:sequence>
          <xs:element ref="ListOfPlotItems"/>
        </xs:sequence>
        <xs:attributeGroup ref="name.attribute"/>
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="Plot2D"/>
              <xs:enumeration value="SimWiz"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="active" use="required" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ListOfPlotItems" type="listOfPlotItems.datatype"/>
  <xs:complexType name="listOfPlotItems.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="PlotItem"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlotItem" type="plotItem.datatype"/>
  <xs:complexType name="plotItem.datatype">
    <xs:complexContent>
      <xs:extension base="parameterList.datatype">
        <xs:sequence>
          <xs:element ref="ListOfChannels"/>
        </xs:sequence>
        <xs:attributeGroup ref="name.attribute"/>
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="Unset"/>
              <xs:enumeration value="Histogram1DItem"/>
              <xs:enumeration value="Curve2D"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ListOfChannels" type="listOfChannels.datatype"/>
  <xs:complexType name="listOfChannels.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ChannelSpec"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ChannelSpec">
    <xs:complexType>
      <xs:attributeGroup ref="channelSpec.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="channelSpec.datatype">
    <xs:attribute name="cn" use="required" type="xs:string"/>
    <xs:attribute name="min" type="xs:double"/>
    <xs:attribute name="max" type="xs:double"/>
  </xs:attributeGroup>
  <xs:complexType name="gui.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ListOfSliders"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ListOfSliders" type="listOfSliders.datatype"/>
  <xs:complexType name="listOfSliders.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Slider"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Slider">
    <xs:complexType>
      <xs:attributeGroup ref="slider.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="slider.datatype">
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Slider_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="associatedEntityKey" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="[_a-zA-Z]+_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="objectCN" use="required" type="xs:string"/>
    <xs:attribute name="objectType" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="unsignedInteger"/>
          <xs:enumeration value="unsignedFloat"/>
          <xs:enumeration value="integer"/>
          <xs:enumeration value="float"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="objectValue" use="required" type="xs:double"/>
    <xs:attribute name="maxValue" use="required" type="xs:double"/>
    <xs:attribute name="minValue" use="required" type="xs:double"/>
    <xs:attribute name="tickFactor" use="required" type="xs:positiveInteger"/>
    <xs:attribute name="tickNumber" use="required" type="xs:positiveInteger"/>
    <xs:attribute name="scaling" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="logarithmic"/>
          <xs:enumeration value="linear"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="Expression" type="expression.simpletype"/>
  <xs:element name="InitialExpression" type="expression.simpletype"/>
  <xs:element name="Object">
    <xs:complexType>
      <xs:attribute name="cn" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <!-- I need two simple data types for the render extension that -->
  <!-- look like SBML ids, but that are not derived from ID. -->
  <xs:simpleType name="layoutId.datatype">
    <xs:restriction base="xs:string">
      <xs:pattern value="[_a-zA-Z][_a-zA-Z0-9]*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="layoutIdRef.datatype">
    <xs:restriction base="xs:string">
      <xs:pattern value="[_a-zA-Z][_a-zA-Z0-9]*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="boundingBox.datatype">
    <xs:sequence>
      <xs:element ref="Position"/>
      <xs:element name="Dimensions">
        <xs:complexType>
          <xs:attribute name="width" use="required" type="xs:double"/>
          <xs:attribute name="height" use="required" type="xs:double"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Position">
    <xs:complexType>
      <xs:attribute name="x" use="required" type="xs:double"/>
      <xs:attribute name="y" use="required" type="xs:double"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="layoutPoint.datatype">
    <xs:attribute name="x" use="required" type="xs:double"/>
    <xs:attribute name="y" use="required" type="xs:double"/>
  </xs:attributeGroup>
  <xs:group name="lineSegment.datatype">
    <xs:sequence>
      <xs:element ref="Start"/>
      <xs:element ref="End"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="Start">
    <xs:complexType>
      <xs:attributeGroup ref="layoutPoint.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="End">
    <xs:complexType>
      <xs:attributeGroup ref="layoutPoint.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="cubicBezier.datatype">
    <xs:sequence>
      <xs:group ref="lineSegment.datatype"/>
      <xs:element minOccurs="0" ref="BasePoint1"/>
      <xs:element minOccurs="0" ref="BasePoint2"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="BasePoint1">
    <xs:complexType>
      <xs:attributeGroup ref="layoutPoint.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="BasePoint2">
    <xs:complexType>
      <xs:attributeGroup ref="layoutPoint.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="curveSegment.element" abstract="true">
  </xs:element>
  <xs:element name="CurveSegment" substitutionGroup="curveSegment.element">
    <xs:annotation>
      <xs:documentation> This is only added to be backwards compatible by supporting the xsi:type
        mechanism, which is not needed for RelaxNG. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="lineSegment.datatype"></xs:group>
        <xs:element minOccurs="0" ref="BasePoint1"/>
        <xs:element minOccurs="0" ref="BasePoint2"/>
      </xs:sequence>
      <xs:attributeGroup ref="x:type1"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="LineSegment" substitutionGroup="curveSegment.element">
    <xs:complexType>
      <xs:group ref="lineSegment.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="CubicBezier" substitutionGroup="curveSegment.element">
    <xs:complexType>
      <xs:group ref="cubicBezier.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="layoutCurve.datatype">
    <xs:sequence>
      <xs:element ref="ListOfCurveSegments"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ListOfCurveSegments">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="curveSegment.element"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="transformation.datatype">
    <xs:attribute name="transform">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern
            value="((\s*[+\-]?[0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?\s*,){5}|(\s*[+\-]?[0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?\s*,){11})(\s*[+\-]?[0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?\s*)"
          />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- data type for key, role and type lists -->
  <xs:simpleType name="commaSeparatedStringList.datatype">
    <xs:restriction base="xs:string">
      <xs:pattern value="^(\s*\S+\s*,)*(\s*\S+\s*)?"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="graphicalPrimitive1D.datatype">
    <xs:attributeGroup ref="transformation.datatype"/>
    <xs:attribute name="stroke" type="colorValueOrId.datatype"/>
    <xs:attribute name="stroke-width" type="xs:double"/>
    <xs:attribute name="stroke-dasharray">
      <xs:simpleType>
        <xs:restriction>
          <xs:simpleType>
            <xs:list itemType="xs:integer"/>
          </xs:simpleType>
          <xs:length value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="graphicalPrimitive2D.datatype">
    <xs:attributeGroup ref="graphicalPrimitive1D.datatype"/>
    <xs:attribute name="fill" type="colorValueOrId.datatype"/>
    <xs:attribute name="fill-rule">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="nonzero"/>
          <xs:enumeration value="evenodd"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:simpleType name="relAbsValue.datatype">
    <xs:restriction base="xs:string">
      <xs:pattern
        value="\s*((([+\-]?[0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?)([+\-][0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?%))|([+\-]?[0-9]*(\.[0-9]*)?([eE][+\-]?[0-9]+)?%?))\s*"
      />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fontStyle.datatype">
    <xs:restriction base="xs:token">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="italic"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fontWeight.datatype">
    <xs:restriction base="xs:token">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="bold"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAnchor.datatype">
    <xs:restriction base="xs:token">
      <xs:enumeration value="start"/>
      <xs:enumeration value="middle"/>
      <xs:enumeration value="end"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="vtextAnchor.datatype">
    <xs:restriction base="xs:token">
      <xs:enumeration value="top"/>
      <xs:enumeration value="middle"/>
      <xs:enumeration value="bottom"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="image.dataype">
    <xs:attributeGroup ref="transformation.datatype"/>
    <xs:attribute name="x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="y" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="width" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="height" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="href" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="text.datatype">
    <xs:attributeGroup ref="graphicalPrimitive1D.datatype"/>
    <xs:attribute name="x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="y" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="font-family" type="relAbsValue.datatype"/>
    <xs:attribute name="font-size" type="relAbsValue.datatype"/>
    <xs:attribute name="font-style" type="fontStyle.datatype"/>
    <xs:attribute name="font-weight" type="fontWeight.datatype"/>
    <xs:attribute name="text-anchor" type="textAnchor.datatype"/>
    <xs:attribute name="vtext-anchor" type="vtextAnchor.datatype"/>
  </xs:attributeGroup>
  <xs:group name="groupElements.datatype">
    <xs:choice>
      <xs:element ref="Group"/>
      <xs:element ref="Text"/>
      <xs:element ref="Rectangle"/>
      <xs:element ref="Ellipse"/>
      <xs:element ref="Polygon"/>
      <xs:element ref="Image"/>
      <xs:element name="Curve" type="renderCurve.datatype"/>
    </xs:choice>
  </xs:group>
  <xs:element name="Group" type="group.datatype"/>
  <xs:element name="Text">
    <xs:complexType>
      <xs:attributeGroup ref="text.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Rectangle">
    <xs:complexType>
      <xs:attributeGroup ref="rectangle.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Ellipse">
    <xs:complexType>
      <xs:attributeGroup ref="ellipse.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Polygon" type="polygon.datatype"/>
  <xs:element name="Image">
    <xs:complexType>
      <xs:attributeGroup ref="image.dataype"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="group.datatype">
    <xs:group minOccurs="0" maxOccurs="unbounded" ref="groupElements.datatype"/>
    <xs:attributeGroup ref="graphicalPrimitive2D.datatype"/>
    <xs:attribute name="font-family" type="relAbsValue.datatype"/>
    <xs:attribute name="font-size" type="relAbsValue.datatype"/>
    <xs:attribute name="font-style" type="fontStyle.datatype"/>
    <xs:attribute name="font-weight" type="fontWeight.datatype"/>
    <xs:attribute name="text-anchor" type="textAnchor.datatype"/>
    <xs:attribute name="vtext-anchor" type="vtextAnchor.datatype"/>
    <xs:attribute name="startHead" type="layoutIdRef.datatype"/>
    <xs:attribute name="endHead" type="layoutIdRef.datatype"/>
  </xs:complexType>
  <xs:attributeGroup name="rectangle.datatype">
    <xs:attributeGroup ref="graphicalPrimitive2D.datatype"/>
    <xs:attribute name="x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="y" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="width" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="height" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="rx" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="ry" use="required" type="relAbsValue.datatype"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="ellipse.datatype">
    <xs:attributeGroup ref="graphicalPrimitive2D.datatype"/>
    <xs:attribute name="cx" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="cy" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="rx" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="ry" use="required" type="relAbsValue.datatype"/>
  </xs:attributeGroup>
  <xs:complexType name="renderCurve.datatype">
    <xs:sequence>
      <xs:element ref="ListOfElements"/>
    </xs:sequence>
    <xs:attributeGroup ref="graphicalPrimitive1D.datatype"/>
    <xs:attribute name="startHead" type="layoutIdRef.datatype"/>
    <xs:attribute name="endHead" type="layoutIdRef.datatype"/>
  </xs:complexType>
  <xs:element name="ListOfElements" type="renderCurveElements.datatype"/>
  <xs:complexType name="polygon.datatype">
    <xs:sequence>
      <xs:element ref="ListOfElements"/>
    </xs:sequence>
    <xs:attributeGroup ref="graphicalPrimitive2D.datatype"/>
  </xs:complexType>
  <xs:simpleType name="colorValue.datatype">
    <xs:restriction base="xs:string">
      <xs:pattern value="#([0-9a-f]|[0-9A-F]){8}|#([0-9a-f]|[0-9A-F]){6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="colorValueOrId.datatype">
    <xs:union memberTypes="layoutIdRef.datatype colorValue.datatype"/>
  </xs:simpleType>
  <xs:attributeGroup name="gradientStop.datatype">
    <xs:attribute name="offset" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="stop-color" use="required" type="colorValue.datatype"/>
  </xs:attributeGroup>
  <xs:complexType name="gradientBase.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Stop"/>
    </xs:sequence>
    <xs:attribute name="id" use="required" type="layoutId.datatype"/>
  </xs:complexType>
  <xs:element name="Stop">
    <xs:complexType>
      <xs:attributeGroup ref="gradientStop.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="radialGradient.datatype">
    <xs:complexContent>
      <xs:extension base="gradientBase.datatype">
        <xs:attribute name="cx" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="cy" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="r" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="fx" type="relAbsValue.datatype"/>
        <xs:attribute name="fy" type="relAbsValue.datatype"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="linearGradient.datatype">
    <xs:complexContent>
      <xs:extension base="gradientBase.datatype">
        <xs:attribute name="x1" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="y1" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="z1" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="x2" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="y2" use="required" type="relAbsValue.datatype"/>
        <xs:attribute name="z2" use="required" type="relAbsValue.datatype"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="gradientGroup.datatype" abstract="true"/>
  <xs:element name="RadialGradient" substitutionGroup="gradientGroup.datatype"
    type="radialGradient.datatype"/>
  <xs:element name="LinearGradient" substitutionGroup="gradientGroup.datatype"
    type="linearGradient.datatype"/>
  <xs:attributeGroup name="colorDefinition.datatype">
    <xs:attribute name="id" use="required" type="layoutId.datatype"/>
    <xs:attribute name="value" use="required" type="colorValue.datatype"/>
  </xs:attributeGroup>
  <xs:complexType name="lineEnding.datatype">
    <xs:sequence>
      <xs:element ref="BoundingBox"/>
      <xs:element ref="Group"/>
    </xs:sequence>
    <xs:attribute name="id" use="required" type="layoutId.datatype"/>
  </xs:complexType>
  <xs:element name="BoundingBox" type="boundingBox.datatype"/>
  <xs:complexType name="renderInformationBase.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ListOfColorDefinitions"/>
      <xs:element minOccurs="0" ref="ListOfGradientDefinitions"/>
      <xs:element minOccurs="0" ref="ListOfLineEndings"/>
    </xs:sequence>
    <xs:attribute name="backgroundColor" default="#FFFFFFFF" type="colorValue.datatype"/>
    <xs:attribute name="referenceRenderInformation">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="[_a-zA-Z]+_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:element name="ListOfColorDefinitions">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="ColorDefinition"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ColorDefinition">
    <xs:complexType>
      <xs:attributeGroup ref="colorDefinition.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfGradientDefinitions">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="gradientGroup.datatype"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfLineEndings">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="LineEnding"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="LineEnding" type="lineEnding.datatype"/>
  <xs:complexType name="style.datatype">
    <xs:sequence>
      <xs:element ref="Group"/>
    </xs:sequence>
    <xs:attribute name="roleList" type="commaSeparatedStringList.datatype"/>
    <xs:attribute name="typeList" type="commaSeparatedStringList.datatype"/>
  </xs:complexType>
  <xs:complexType name="globalStyle.dataType">
    <xs:complexContent>
      <xs:extension base="style.datatype"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="localStyle.datatype">
    <xs:complexContent>
      <xs:extension base="style.datatype">
        <xs:attribute name="keyList" type="commaSeparatedStringList.datatype"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="localRenderInformation.datatype">
    <xs:complexContent>
      <xs:extension base="renderInformationBase.datatype">
        <xs:sequence>
          <xs:element minOccurs="0" name="ListOfStyles">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Style" type="localStyle.datatype"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="globalRenderInformation.datatype">
    <xs:complexContent>
      <xs:extension base="renderInformationBase.datatype">
        <xs:sequence>
          <xs:element minOccurs="0" name="ListOfStyles">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Style" type="globalStyle.dataType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:group name="listOfGlobalRenderInformation.datatype">
    <xs:sequence>
      <xs:element name="RenderInformation" type="globalRenderInformation.datatype"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="listOfLocalRenderInformation.datatype">
    <xs:sequence>
      <xs:element name="RenderInformation" type="localRenderInformation.datatype"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="renderPoint.datatytpe">
    <xs:attribute name="x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="y" use="required" type="relAbsValue.datatype"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="renderCubicBezier.datatype">
    <xs:attributeGroup ref="renderPoint.datatytpe"/>
    <xs:attribute name="basePoint1_x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="basePoint1_y" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="basePoint2_x" use="required" type="relAbsValue.datatype"/>
    <xs:attribute name="basePoint2_y" use="required" type="relAbsValue.datatype"/>
  </xs:attributeGroup>
  <xs:element name="renderCurve.element" abstract="true">
  </xs:element>
  <xs:element name="Element" substitutionGroup="renderCurve.element">
    <xs:annotation>
      <xs:documentation> This is only added to be backwards compatible by supporting the xsi:type
        mechanism, which is not needed for RelaxNG. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="x:type1"/>
      <xs:attributeGroup ref="renderPoint.datatytpe"/>
      <xs:attribute name="basePoint1_x" type="relAbsValue.datatype"/>
      <xs:attribute name="basePoint1_y" type="relAbsValue.datatype"/>
      <xs:attribute name="basePoint2_x" type="relAbsValue.datatype"/>
      <xs:attribute name="basePoint2_y" type="relAbsValue.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="RenderPoint" substitutionGroup="renderCurve.element">
    <xs:complexType>
      <xs:attributeGroup ref="renderPoint.datatytpe"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="RenderCubicBezier" substitutionGroup="renderCurve.element">
    <xs:complexType>
      <xs:attributeGroup ref="renderCubicBezier.datatype"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="renderCurveElements.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="renderCurve.element"/>
    </xs:sequence>
  </xs:complexType>
  <xs:attributeGroup name="dimension.datatype">
    <xs:attribute name="width" use="required" type="xs:double"/>
    <xs:attribute name="height" use="required" type="xs:double"/>
  </xs:attributeGroup>
  <xs:complexType name="glyph.datatype">
    <xs:sequence>
      <xs:element ref="BoundingBox"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Layout_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="listOfCompartmentGlyphs.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="CompartmentGlyph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CompartmentGlyph">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="glyph.datatype">
          <xs:attribute name="compartment">
            <xs:simpleType>
              <xs:restriction base="xs:IDREF">
                <xs:pattern value="Compartment_\d+"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="listOfMetabGlyphs.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="MetaboliteGlyph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MetaboliteGlyph">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="glyph.datatype">
          <xs:attribute name="metabolite">
            <xs:simpleType>
              <xs:restriction base="xs:IDREF">
                <xs:pattern value="Metabolite_\d+"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="metaboliteReferenceGlyp.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" ref="BoundingBox"/>
      <xs:element minOccurs="0" name="Curve" type="layoutCurve.datatype"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Layout_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="metaboliteGlyph">
      <xs:simpleType>
        <xs:restriction base="xs:IDREF">
          <xs:pattern value="Layout_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="role" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="listOfReactionGlyphs.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ReactionGlyph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReactionGlyph">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="BoundingBox"/>
        <xs:element minOccurs="0" name="Curve" type="layoutCurve.datatype"/>
        <xs:element minOccurs="0" ref="ListOfMetaboliteReferenceGlyphs"/>
      </xs:sequence>
      <xs:attribute name="key" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:ID">
            <xs:pattern value="Layout_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="reaction">
        <xs:simpleType>
          <xs:restriction base="xs:IDREF">
            <xs:pattern value="Reaction_\d+"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="ListOfMetaboliteReferenceGlyphs">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="MetaboliteReferenceGlyph"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="MetaboliteReferenceGlyph" type="metaboliteReferenceGlyp.datatype"/>
  <xs:complexType name="listOfTextGlyphs.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="TextGlyph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TextGlyph">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="glyph.datatype">
          <xs:attribute name="graphicalObject">
            <xs:simpleType>
              <xs:restriction base="xs:IDREF">
                <xs:pattern value="[_a-zA-Z]+_\d+"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="originOfText">
            <xs:simpleType>
              <xs:restriction base="xs:IDREF">
                <xs:pattern value="[_a-zA-Z]+_\d+"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="text" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="listOfAdditionalGraphicalObjects.datatype">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="AdditionalGraphicalObject"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalGraphicalObject" type="glyph.datatype"/>
  <xs:complexType name="layout.datatype">
    <xs:sequence>
      <xs:element name="Dimensions">
        <xs:complexType>
          <xs:attributeGroup ref="dimension.datatype"/>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" ref="ListOfCompartmentGlyphs"/>
      <xs:element minOccurs="0" ref="ListOfMetabGlyphs"/>
      <xs:element minOccurs="0" ref="ListOfReactionGlyphs"/>
      <xs:element minOccurs="0" ref="ListOfTextGlyphs"/>
      <xs:element minOccurs="0" ref="ListOfAdditionalGraphicalObjects"/>
    </xs:sequence>
    <xs:attribute name="key" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:ID">
          <xs:pattern value="Layout_\d+"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:element name="ListOfCompartmentGlyphs" type="listOfCompartmentGlyphs.datatype"/>
  <xs:element name="ListOfMetabGlyphs" type="listOfMetabGlyphs.datatype"/>
  <xs:element name="ListOfReactionGlyphs" type="listOfReactionGlyphs.datatype"/>
  <xs:element name="ListOfTextGlyphs" type="listOfTextGlyphs.datatype"/>
  <xs:element name="ListOfAdditionalGraphicalObjects"
    type="listOfAdditionalGraphicalObjects.datatype"/>
  <xs:complexType name="listOfLayouts.datatype">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="Layout"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Layout" type="layout.datatype"/>
</xs:schema>
