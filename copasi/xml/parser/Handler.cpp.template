#include "copasi.h"

#include "TemplateHandler.h"

/**
 * Replace Template with the name type of the handler and implement the
 * three methods below.
 */
TemplateHandler::TemplateHandler(CXMLParser & parser, CXMLParserData & data):
  CXMLHandler(parser, data, CXMLHandler::Template)
{
  init();
}

// virtual
TemplateHandler::~TemplateHandler()
{}

// virtual
CXMLHandler * TemplateHandler::processStart(const XML_Char * pszName,
                                            const XML_Char ** papszAttrs)
{
  CXMLHandler * pHandlerToCall = NULL;

  // TODO CRITICAL Implement me!
  
  return pHandlerToCall;
}

// virtual
CXMLHandler * TemplateHandler::processEnd(const XML_Char * pszName)
{
  CXMLHandler * pHandlerToCall = NULL;

  // TODO CRITICAL Implement me!
  
  return pHandlerToCall;
}

// virtual
CXMLHandler::sProcessLogic * TemplateHandler::getProcessLogic() const
{
  // TODO CRITICAL Implement me!
  
  static sProcessLogic Elements[] = {
    {"Template", Template, {BEFORE}},
    {"BEFORE", BEFORE, {Template, BEFORE}}
  };

  return Elements;
}
