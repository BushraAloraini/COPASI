// Begin git Header 
//   Commit: 28d5663ff3fc99993d3b249dec626841cb5247ab 
//   Author: Frank T. Bergmann fbergman@caltech.edu 
//   Date: 2012-08-29 10:43:00 +0200 
// End git Header 


// Copyright (C) 2012 - 2010 by Pedro Mendes, Virginia Tech Intellectual 
// Properties, Inc., University of Heidelberg, and The University 
// of Manchester. 
// All rights reserved. 

// Copyright (C) 2008 by Pedro Mendes, Virginia Tech Intellectual 
// Properties, Inc., EML Research, gGmbH, University of Heidelberg, 
// and The University of Manchester. 
// All rights reserved. 

// Copyright (C) 2001 - 2007 by Pedro Mendes, Virginia Tech Intellectual 
// Properties, Inc. and EML Research, gGmbH. 
// All rights reserved. 

%{

#include "model/CReaction.h"

%}
    
%ignore CReaction::load;
%ignore CReaction::getSmallestCompartment() const; // not implemented
%ignore CReaction::getParameterMappings() const; 
%ignore CReaction::setFunctionFromExpressionTree(CEvaluationTree* , std::map<CCopasiObject*, SBase*> & , CFunctionDB* );
%ignore CReaction::calculatePartialDerivative;
%ignore CReaction::getExpressionTree;
%ignore CReaction::getDeletedObjects;
%ignore CReaction::getParticleFluxReference() const;
%ignore CReaction::getFluxReference() const;

#if (defined SWIGJAVA || defined SWIGCSHARP)
// remove some const methods to get rid of warnings
%ignore CReaction::getChemEq() const;
%ignore CReaction::getParameters() const;

#endif // SWIGJAVA || CSHARP


%extend CReaction{
#if(defined SWIGJAVA || defined SWIGCSHARP)
  // the CAnnotation functionality has to be added manually because
  // Java does not know about multiple inheritance
  void setNotes(const std::string& notes)
  {
    self->setNotes(notes);
  } 

  const std::string& getNotes() const
  {
    return self->getNotes();
  } 

  const std::string& getMiriamAnnotation() const
  {
    return self->getMiriamAnnotation();
  }

  void setMiriamAnnotation(const std::string& miriamAnnotation,
                           const std::string& newId,
                           const std::string& oldId)
  {
    self->setMiriamAnnotation(miriamAnnotation,newId,oldId);
  } 
#endif // SWIGJAVA

#ifdef SWIGR

//  /**
//   * This function is a hack to be able to set
//   * the function of a reaction in R from a wrapped
//   * CEvaluationTree pointer that points to a CFunction.
//   *
//   * Normally the code generated by SWIG for R language bindings seems to be able
//   * to handle the upcasting to the most specific type quite well without any
//   * additional typemaps. At least in one small example that I wrote to debug this
//   * problem, it worked.
//   * I suspect that the multiple inheritance that we use in COPASI throws SWIG off.
//   */
//  bool setFunction(CEvaluationTree* pTree)
//  {
//      bool result=false;
//      CFunction* pFun=dynamic_cast<CFunction*>(pTree);
//      if(pFun != NULL)
//      {
//        result=self->setFunction(pFun);
//      }
//      return result;
//  }
#endif // SWIGR
}

%catches(CCopasiException) CReaction::getLargestCompartment() const;

// suppress warnings on multiple inheritance
%warnfilter(813) CReaction;


%include "model/CReaction.h"

