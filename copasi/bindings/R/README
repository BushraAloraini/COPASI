Somehow the code in COPASI.R that is generated by SWIG does not work very well with enumerations.
The enumerations as in CModel::TimeUnit are converted to string in R. So if one calls CModel_getTimeUnitEnum(model) where model is an external pointer to a CModel instance, you get a string that describes the time unit, e.g. "s".

According to the rather short SWIG documentation on R and enumerations, this should also work the other way round, so calling CModel_setTimeUnit(model,"s") should set the time unit for the model to seconds. The code that SWIG generated is supposed to convert the string to the corresponding enum.

Although this translation code is there, is contains a bug (at least in SWIG 2.0.4) because it calls the enumToInteger function with "_p_CModel__TimeUnit" as the argument instead of "_CModel__TimeUnit". Since SWIG defines the enums in .__E___CModel__TimeUnit and not ".__E___p_CModel__TimeUnit", this leads to an error during execution.

This problem can be fixed if one fixes all the methods in COPASI.R that set an enum, which is rather cumbersome.

:%s/enumToInteger\(.*\)"_p/enumToInteger\1"/
in vim should fix all occurences of this problem.
