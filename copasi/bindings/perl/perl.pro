# Begin CVS Header 
#   $Source: /Volumes/Home/Users/shoops/cvs/copasi_dev/copasi/bindings/perl/perl.pro,v $ 
#   $Revision: 1.4.2.4 $ 
#   $Name:  $ 
#   $Author: gauges $ 
#   $Date: 2011/07/28 08:44:50 $ 
# End CVS Header 

# Copyright (C) 2011 - 2010 by Pedro Mendes, Virginia Tech Intellectual 
# Properties, Inc., University of Heidelberg, and The University 
# of Manchester. 
# All rights reserved. 

# Copyright (C) 2008 by Pedro Mendes, Virginia Tech Intellectual
# Properties, Inc., EML Research, gGmbH, University of Heidelberg,
# and The University of Manchester.
# All rights reserved.

# Copyright (C) 2001 - 2007 by Pedro Mendes, Virginia Tech Intellectual
# Properties, Inc. and EML Research, gGmbH.
# All rights reserved.

TEMPLATE = lib
CONFIG -= qt

include(../../common.pri)
include(../../app.pri)

isEmpty(PERL_BIN){
  # we just assume it is in the path
  PERL_BIN = $$system(which perl)
}

isEmpty(PERL_BIN) | !exists($$PERL_BIN){
  error("Could not find perl binary at \"$${PERL_BIN}\"."); 
}

contains(BUILD_OS,WIN32){
   TARGET = _COPASI
} else {
   TARGET = COPASI
}

# the code generated by swig has to be compiled with -O1
# since -O2 and higher do things that might break the binary
QMAKE_CFLAGS_RELEASE -= -O3
QMAKE_CFLAGS_RELEASE -= -O2
QMAKE_CFLAGS_RELEASE += -O1
QMAKE_CXXFLAGS_RELEASE -= -O3
QMAKE_CXXFLAGS_RELEASE -= -O2
QMAKE_CXXFLAGS_RELEASE += -O1

COPASI_LIBS += $${COPASI_LIBS_SE}


INCLUDEPATH += ../../..
contains(BUILD_OS,Linux){
  isEmpty(PERL_BIN){
    PERL_BIN=/usr/bin/perl
  }

  PERL_INCLUDES = $$system($$PERL_BIN -e \'use Config;print \$Config{archlib};\')

  INCLUDEPATH += $${PERL_INCLUDES}/CORE/

  LIBS = -L../../lib \
         $$join(COPASI_LIBS, " -l", -l) \
         $${LIBS}

  TARGETDEPS += $$join(COPASI_LIBS, ".a  ../../lib/lib", ../../lib/lib, .a)
  
  QMAKE_LFLAGS -= -Wl,--no-undefined

}

contains(BUILD_OS, Darwin) {
  QMAKE_LFLAGS += -Wl,-search_paths_first

  isEmpty(PERL_BIN){
    PERL_BIN=/usr/bin/perl
  }

  PERL_INCLUDES = $$system($$PERL_BIN -e \'use Config;print \$Config{archlib};\')

  INCLUDEPATH += $${PERL_INCLUDES}/CORE/

  LIBS = $$join(COPASI_LIBS, ".a  ../../lib/lib", ../../lib/lib, .a) \
         $${LIBS}
  
  TARGETDEPS += $$join(COPASI_LIBS, ".a  ../../lib/lib", ../../lib/lib, .a)

  LIBS += -L$${PERL_INCLUDES}/CORE
  LIBS += -lperl

  QMAKE_LFLAGS_SHLIB += -unexported_symbols_list unexported_symbols.list
  QMAKE_PRE_LINK = nm -g $$SBML_PATH/lib/libsbml.a | grep "^[0-9]" | cut -d\" \" -f3  > unexported_symbols.list ; nm -g $$EXPAT_PATH/lib/libexpat.a | grep "^[0-9]" | cut -d\" \" -f3  >> unexported_symbols.list

}

contains(BUILD_OS, WIN32) { 
  LIBS += $$join(COPASI_LIBS, ".lib  ../../lib/", ../../lib/, .lib)

  TARGETDEPS += $$join(COPASI_LIBS, ".lib  ../../lib/", ../../lib/, .lib)

  CONFIG -= staticlib
  CONFIG += dll
  CONFIG += embed_manifest_dll
  LIBS += delayimp.lib
  
  release {
    QMAKE_POST_LINK = mt.exe -manifest $(TARGET).manifest -outputresource:$(TARGET);2 
  } else {
    QMAKE_POST_LINK = mt.exe -manifest $(TARGET).manifest -outputresource:$(TARGET);2 
  }


}

include(../common/swig_files.pri)


#DISTFILE   = $$SWIG_INTERFACE_FILES
#DISTFILES += local.cpp
#DISTFILES += perl.i
#DISTFILES += $$UNITTEST_FILES

isEmpty(SWIG_PATH){
    # check if the wrapper file is there
    !exists(copasi_wrapper.cpp){
        error(Wrapper file copasi_wrapper.cpp missing. Please reconfigure with --with-swig=PATH_TO_SWIG.)
    }
}

!isEmpty(SWIG_PATH){
    # check if swig is there and create a target to run it to create
    # copasi_wrapper.cpp
    contains(BUILD_OS, WIN32){
        !exists($$SWIG_PATH/swig.exe){
        error(Unable to find swig excecutable in $$SWIG_PATH. Please use --with-swig=PATH to specify the path where PATH/swig.exe is located.) 
         }
    }
    !contains(BUILD_OS, WIN32){
      !exists($$SWIG_PATH/bin/swig){
        error(Unable to find swig excecutable in $$SWIG_PATH/bin/. Please use --with-swig=PATH to specify the path where PATH/bin/swig is located.) 
      }
    }

    DEFINE_COMMANDLINE = $$join(DEFINES," -D",-D)
    contains(BUILD_OS, WIN32){
      wrapper_source.target = copasi_wrapper.cpp
      wrapper_source.depends = $$SWIG_INTERFACE_FILES perl.i local.cpp
      wrapper_source.commands = $(DEL_FILE) $$wrapper_source.target && $$SWIG_PATH\swig.exe $$DEFINE_COMMANDLINE -I..\.. -c++ -perl -o $$wrapper_source.target perl.i
      QMAKE_EXTRA_WIN_TARGETS += wrapper_source
    }
    !contains(BUILD_OS, WIN32){
      wrapper_source.target = copasi_wrapper.cpp
      wrapper_source.depends = $$SWIG_INTERFACE_FILES perl.i local.cpp
      wrapper_source.commands = $(DEL_FILE) $$wrapper_source.target ; $$SWIG_PATH/bin/swig $$DEFINE_COMMANDLINE -I../.. -c++ -perl -o $$wrapper_source.target perl.i
  
      QMAKE_EXTRA_TARGETS += wrapper_source
    }
    PRE_POST_TARGETDEPS += copasi_wrapper.cpp
}

QMAKE_CLEAN += copasi_wrapper.cpp 
QMAKE_CLEAN += COPASI.pm

SOURCES += copasi_wrapper.cpp
# under windows qmake seems to ignore the last line of progject files

