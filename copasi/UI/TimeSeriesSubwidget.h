// Begin CVS Header
//   $Source: /home/cvs/copasi_dev/copasi/UI/TimeSeriesSubwidget.h,v $
//   $Revision: 1.14 $
//   $Name:  $
//   $Author: shoops $
//   $Date: 2008/12/18 19:58:29 $
// End CVS Header

// Copyright (C) 2008 by Pedro Mendes, Virginia Tech Intellectual
// Properties, Inc., EML Research, gGmbH, University of Heidelberg,
// and The University of Manchester.
// All rights reserved.

#ifndef TIMESERIESSUBWIDGET_H
#define TIMESERIESSUBWIDGET_H

#include <qvariant.h>

#include <Qt3Support/Q3TextEdit>
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <Qt3Support/Q3ButtonGroup>
#include <Qt3Support/Q3HBoxLayout>
#include <QtGui/QPushButton>
#include <QtGui/QSpacerItem>
#include <QtGui/QTabWidget>
#include <Qt3Support/Q3VBoxLayout>
#include <QtGui/QWidget>
//Added by qt3to4:
#include <QPixmap>
#include <Q3HBoxLayout>
#include <Q3VBoxLayout>
#include "CTimeSeriesTable.h"
#include "copasi.h"

class Ui_TimeSeriesSubWidget
  {
  public:
    Q3VBoxLayout *vboxLayout;
    Q3HBoxLayout *hboxLayout;
    QSpacerItem *spacer;
    QPushButton *ButtonSaveData;
    QTabWidget *tabWidget2;
    QWidget *tab;
    Q3VBoxLayout *vboxLayout1;
    Q3TextEdit *optimizationResultText;
    QWidget *tab1;
    Q3VBoxLayout *vboxLayout2;
    CTimeSeriesTable *dataTable;

    void setupUi(QWidget *TimeSeriesSubWidget)
    {
      if (TimeSeriesSubWidget->objectName().isEmpty())
        TimeSeriesSubWidget->setObjectName(QString::fromUtf8("TimeSeriesSubWidget"));
      TimeSeriesSubWidget->resize(600, 382);
      QSizePolicy sizePolicy(static_cast<QSizePolicy::Policy>(7), static_cast<QSizePolicy::Policy>(7));
      sizePolicy.setHorizontalStretch(0);
      sizePolicy.setVerticalStretch(0);
      sizePolicy.setHeightForWidth(TimeSeriesSubWidget->sizePolicy().hasHeightForWidth());
      TimeSeriesSubWidget->setSizePolicy(sizePolicy);
      vboxLayout = new Q3VBoxLayout(TimeSeriesSubWidget);
      vboxLayout->setSpacing(6);
      vboxLayout->setMargin(11);
      vboxLayout->setObjectName(QString::fromUtf8("vboxLayout"));
      hboxLayout = new Q3HBoxLayout();
      hboxLayout->setSpacing(1);
      hboxLayout->setMargin(1);
      hboxLayout->setObjectName(QString::fromUtf8("hboxLayout"));
      spacer = new QSpacerItem(170, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

      hboxLayout->addItem(spacer);

      ButtonSaveData = new QPushButton(TimeSeriesSubWidget);
      ButtonSaveData->setObjectName(QString::fromUtf8("ButtonSaveData"));
      QSizePolicy sizePolicy1(static_cast<QSizePolicy::Policy>(1), static_cast<QSizePolicy::Policy>(0));
      sizePolicy1.setHorizontalStretch(0);
      sizePolicy1.setVerticalStretch(0);
      sizePolicy1.setHeightForWidth(ButtonSaveData->sizePolicy().hasHeightForWidth());
      ButtonSaveData->setSizePolicy(sizePolicy1);

      hboxLayout->addWidget(ButtonSaveData);

      vboxLayout->addLayout(hboxLayout);

      tabWidget2 = new QTabWidget(TimeSeriesSubWidget);
      tabWidget2->setObjectName(QString::fromUtf8("tabWidget2"));
      tab = new QWidget();
      tab->setObjectName(QString::fromUtf8("tab"));
      vboxLayout1 = new Q3VBoxLayout(tab);
      vboxLayout1->setSpacing(6);
      vboxLayout1->setMargin(11);
      vboxLayout1->setObjectName(QString::fromUtf8("vboxLayout1"));
      optimizationResultText = new Q3TextEdit(tab);
      optimizationResultText->setObjectName(QString::fromUtf8("optimizationResultText"));
      optimizationResultText->setReadOnly(true);

      vboxLayout1->addWidget(optimizationResultText);

      tabWidget2->addTab(tab, QString());
      tab1 = new QWidget();
      tab1->setObjectName(QString::fromUtf8("tab1"));
      vboxLayout2 = new Q3VBoxLayout(tab1);
      vboxLayout2->setSpacing(6);
      vboxLayout2->setMargin(11);
      vboxLayout2->setObjectName(QString::fromUtf8("vboxLayout2"));
      dataTable = new CTimeSeriesTable(tab1);
      dataTable->setObjectName(QString::fromUtf8("dataTable"));

      vboxLayout2->addWidget(dataTable);

      tabWidget2->addTab(tab1, QString());

      vboxLayout->addWidget(tabWidget2);

      retranslateUi(TimeSeriesSubWidget);
      QObject::connect(ButtonSaveData, SIGNAL(clicked()), TimeSeriesSubWidget, SLOT(saveDataToFile()));

      QMetaObject::connectSlotsByName(TimeSeriesSubWidget);
    } // setupUi

    void retranslateUi(QWidget *TimeSeriesSubWidget)
    {
      TimeSeriesSubWidget->setWindowTitle(QApplication::translate("TimeSeriesSubWidget", "Form1", 0, QApplication::UnicodeUTF8));
      ButtonSaveData->setText(QApplication::translate("TimeSeriesSubWidget", "Save data to file", 0, QApplication::UnicodeUTF8));
      tabWidget2->setTabText(tabWidget2->indexOf(tab), QApplication::translate("TimeSeriesSubWidget", "OptimizationResult", 0, QApplication::UnicodeUTF8));
      tabWidget2->setTabText(tabWidget2->indexOf(tab1), QApplication::translate("TimeSeriesSubWidget", "TimeSeries", 0, QApplication::UnicodeUTF8));
      Q_UNUSED(TimeSeriesSubWidget);
    } // retranslateUi

  protected:
    enum IconID
    {
      image0_ID,
      unknown_ID
    };
    static QPixmap qt_get_icon(IconID id)
    {
      static const unsigned char image0_data[] =
        {
          0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
          0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
          0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
          0x43, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xad, 0x93, 0x31, 0x68, 0x1c,
          0x47, 0x14, 0x86, 0x3f, 0x89, 0x29, 0xde, 0x80, 0x04, 0xb3, 0x20, 0xc3,
          0x2e, 0x38, 0x70, 0x02, 0x0b, 0x74, 0x45, 0x8a, 0x43, 0xe0, 0xe2, 0x40,
          0x85, 0x55, 0x0a, 0x04, 0xb6, 0x40, 0x8d, 0x41, 0x8d, 0x5b, 0x13, 0x02,
          0x21, 0xa4, 0x4a, 0x30, 0x24, 0x90, 0x26, 0x86, 0x54, 0x4a, 0xa3, 0x22,
          0x85, 0x88, 0xd2, 0x38, 0xe7, 0xc2, 0x60, 0x15, 0x32, 0x97, 0x22, 0x48,
          0x07, 0x42, 0x17, 0x09, 0x22, 0xd8, 0x80, 0x0c, 0x7b, 0x85, 0x60, 0x17,
          0x74, 0xb0, 0x03, 0x16, 0xcc, 0x83, 0x2c, 0x28, 0xc5, 0x5e, 0xa2, 0x9c,
          0x12, 0x2b, 0x8d, 0x1e, 0x0c, 0xcb, 0xcc, 0x2c, 0xff, 0xfb, 0xf8, 0xdf,
          0x3f, 0x13, 0xfd, 0x83, 0x3e, 0x54, 0x80, 0x81, 0x85, 0xfb, 0x0b, 0x97,
          0xdc, 0x42, 0xf5, 0xf7, 0xfb, 0x13, 0x13, 0x7b, 0xfb, 0x7b, 0x88, 0x11,
          0x3a, 0x2f, 0x3b, 0x97, 0xcd, 0xf9, 0x26, 0xde, 0x7b, 0xf2, 0x61, 0x4e,
          0xe9, 0x4b, 0x2c, 0x96, 0x40, 0xb8, 0xf1, 0x5b, 0xfa, 0x92, 0xf4, 0x34,
          0xa5, 0x77, 0xd8, 0xab, 0x01, 0x47, 0x65, 0xc4, 0x08, 0x0b, 0xf7, 0x17,
          0x2e, 0x5f, 0xfc, 0xf0, 0x82, 0x28, 0x81, 0x64, 0x0e, 0x1a, 0x95, 0x8e,
          0xae, 0x4b, 0x30, 0x02, 0x94, 0x58, 0x23, 0x40, 0xb8, 0x3a, 0xe7, 0x6a,
          0x9f, 0x9e, 0x0a, 0x7c, 0xef, 0xe8, 0xbd, 0xf1, 0x57, 0xc2, 0x3a, 0x12,
          0x29, 0x86, 0x05, 0xd1, 0x07, 0x90, 0x0d, 0x7f, 0x42, 0xdf, 0x65, 0x84,
          0x4a, 0xb1, 0x16, 0xc2, 0x1f, 0xe0, 0x0b, 0x21, 0x2f, 0x14, 0x41, 0xb0,
          0x33, 0x30, 0x3b, 0x07, 0x22, 0x0a, 0x15, 0x28, 0x20, 0xd3, 0x10, 0xdd,
          0x51, 0xfe, 0x59, 0x46, 0x8c, 0xd4, 0x0c, 0xc3, 0x92, 0x80, 0x47, 0xdf,
          0x15, 0x84, 0xca, 0x63, 0xa7, 0x1d, 0xd9, 0x11, 0x74, 0x77, 0x94, 0xa3,
          0xc3, 0x02, 0x31, 0xa0, 0x95, 0x22, 0xc6, 0x11, 0xdf, 0x13, 0x96, 0xd7,
          0x22, 0xda, 0x8b, 0x01, 0xa1, 0x3e, 0x77, 0x53, 0x42, 0xdd, 0xe6, 0x1a,
          0x71, 0xee, 0x73, 0x5a, 0x28, 0xa1, 0xca, 0xb1, 0xd6, 0xb1, 0xbf, 0xab,
          0x6c, 0x6f, 0x7a, 0xa8, 0xc0, 0x39, 0x21, 0xb9, 0x27, 0x88, 0x40, 0x3e,
          0x50, 0x06, 0x6f, 0x95, 0xef, 0xbe, 0xca, 0x28, 0xd6, 0x63, 0x56, 0xd7,
          0x41, 0xa4, 0x16, 0xff, 0x4f, 0x62, 0x6b, 0x2c, 0xa0, 0xd8, 0x69, 0x21,
          0x3b, 0x82, 0xce, 0x48, 0x74, 0xf9, 0x61, 0xcc, 0x83, 0x15, 0x48, 0x12,
          0x0b, 0x26, 0xa0, 0x1a, 0xd1, 0xdd, 0x09, 0x74, 0x36, 0x3d, 0x9d, 0xad,
          0x01, 0x71, 0xdc, 0x64, 0xe9, 0x91, 0x45, 0x8c, 0x8e, 0x11, 0x4f, 0xfe,
          0xd5, 0x29, 0x54, 0x01, 0x10, 0x42, 0x80, 0xd7, 0xaf, 0x3c, 0x5a, 0x29,
          0xcb, 0x0f, 0x63, 0x56, 0x9f, 0x40, 0x94, 0x28, 0x6a, 0x72, 0xfc, 0xb9,
          0xe5, 0xf5, 0xcb, 0x92, 0xe5, 0xb5, 0x88, 0xc7, 0x1f, 0x39, 0x30, 0xc2,
          0xf6, 0x56, 0x8e, 0x0e, 0xff, 0x1d, 0xb9, 0x71, 0x62, 0x53, 0xe2, 0x8b,
          0x88, 0xf4, 0x38, 0xc3, 0xb9, 0x9a, 0x54, 0xa4, 0x6e, 0xec, 0x2f, 0x12,
          0x36, 0xbe, 0x29, 0xc9, 0x4e, 0x3c, 0xe5, 0x39, 0x3c, 0xfd, 0x2c, 0xa1,
          0xb7, 0xeb, 0xc9, 0x7e, 0x57, 0xd2, 0x34, 0x20, 0x32, 0x2e, 0x3c, 0x46,
          0x6c, 0x8d, 0x90, 0x17, 0x25, 0x18, 0x48, 0x1a, 0x10, 0xdd, 0x01, 0x45,
          0xf1, 0x3e, 0x62, 0xe3, 0xcb, 0x9c, 0xf4, 0xc4, 0x23, 0x4e, 0x68, 0x2f,
          0x46, 0x30, 0x55, 0xd2, 0x6c, 0x39, 0xb4, 0x52, 0xf2, 0x33, 0xd0, 0xea,
          0x9a, 0xf0, 0xb8, 0xc7, 0x20, 0x08, 0x54, 0x8a, 0x9b, 0x1a, 0x0d, 0xe5,
          0x3c, 0x61, 0xe3, 0xeb, 0x92, 0xec, 0xa4, 0x8e, 0x97, 0x9b, 0x12, 0x92,
          0xbb, 0x10, 0x09, 0x60, 0x40, 0x8c, 0xa0, 0x15, 0xc8, 0x35, 0xe4, 0x6b,
          0x1e, 0x83, 0x9d, 0x01, 0x8c, 0x23, 0x1d, 0x28, 0xaa, 0x96, 0xee, 0x9b,
          0x50, 0x93, 0x4e, 0x09, 0xf1, 0x5d, 0xc7, 0x60, 0x50, 0xf0, 0xfc, 0x59,
          0x4e, 0x7a, 0x14, 0x91, 0x67, 0x8a, 0x56, 0xca, 0x6c, 0xc3, 0xc2, 0xcd,
          0xa9, 0x28, 0x69, 0xce, 0x41, 0xa3, 0x21, 0x14, 0x03, 0xa5, 0xbb, 0x13,
          0x58, 0x5d, 0x8f, 0x28, 0xcf, 0x95, 0xf6, 0x83, 0x88, 0x24, 0x86, 0xe7,
          0xcf, 0x60, 0xf0, 0xb6, 0xe0, 0xf3, 0x8f, 0x73, 0xf4, 0xc2, 0x13, 0xc7,
          0x8e, 0x66, 0x0b, 0xf2, 0xe2, 0x06, 0x8f, 0x41, 0x40, 0x94, 0xe5, 0x35,
          0x41, 0x2b, 0xa5, 0xb3, 0xe9, 0xe9, 0xee, 0x94, 0x3c, 0xfd, 0x24, 0xa1,
          0xb5, 0x18, 0x68, 0xb4, 0x02, 0x9f, 0x7e, 0x91, 0x10, 0xc7, 0x0e, 0x3f,
          0x2c, 0xa0, 0x82, 0xf6, 0x8a, 0x63, 0x76, 0xfe, 0x7f, 0x73, 0x1c, 0xa0,
          0x12, 0xda, 0x8b, 0x50, 0x9c, 0xc5, 0x74, 0xb6, 0x06, 0x6c, 0x7f, 0x0b,
          0xbd, 0x5d, 0x4f, 0xf3, 0x43, 0x07, 0x06, 0xf2, 0xac, 0xc4, 0x0f, 0xb5,
          0xf6, 0x16, 0x25, 0xfd, 0x45, 0x49, 0x8f, 0x2d, 0x4e, 0xde, 0xf3, 0xf2,
          0xca, 0x61, 0x39, 0x7a, 0xfb, 0x8a, 0x00, 0xab, 0xeb, 0x42, 0x1c, 0x37,
          0xe9, 0xfc, 0x98, 0x93, 0x9e, 0x28, 0xe9, 0xf1, 0x00, 0x0c, 0xf5, 0x00,
          0x67, 0x1c, 0x4b, 0x8f, 0x1c, 0xbf, 0xfe, 0xac, 0xe4, 0x17, 0x1e, 0xad,
          0x22, 0x8a, 0xe1, 0x7b, 0x88, 0xd3, 0xd3, 0x94, 0x34, 0x13, 0x24, 0xaa,
          0x49, 0xc4, 0xc0, 0xd2, 0x4a, 0xa0, 0xbd, 0x98, 0x90, 0xa6, 0x81, 0xfc,
          0xac, 0x16, 0x4d, 0x1a, 0x96, 0x66, 0x0b, 0x66, 0xe7, 0x21, 0x5d, 0xb1,
          0x50, 0x25, 0x60, 0x4a, 0xb2, 0xdf, 0xc6, 0x3d, 0xfe, 0x9b, 0xb8, 0x77,
          0xd8, 0x83, 0x4d, 0x21, 0x4a, 0xea, 0x48, 0xa9, 0xfa, 0x3a, 0x6f, 0x78,
          0xc4, 0xd4, 0x3f, 0x8b, 0x81, 0xec, 0xcc, 0xd7, 0xb9, 0x7d, 0x55, 0xdb,
          0xe1, 0x3d, 0xa4, 0x47, 0x4a, 0x5e, 0x8c, 0x13, 0xd3, 0x3f, 0xe8, 0x03,
          0x5c, 0xde, 0xf6, 0x9a, 0xbc, 0x3e, 0xcd, 0xdb, 0xaa, 0x49, 0x31, 0x42,
          0x7f, 0xbf, 0x3f, 0x71, 0xeb, 0xc2, 0x5a, 0x29, 0x18, 0xd8, 0xdb, 0xdf,
          0xbb, 0x35, 0xf1, 0xfe, 0x41, 0x7f, 0xe2, 0x4f, 0x12, 0x59, 0xcb, 0xaa,
          0x19, 0x40, 0x4a, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
          0xae, 0x42, 0x60, 0x82
        };

      switch (id)
        {
        case image0_ID: {QImage img; img.loadFromData(image0_data, sizeof(image0_data), "PNG"); return QPixmap::fromImage(img);}
        default: return QPixmap();
        } // switch
    } // icon
  };

namespace Ui
  {
  class TimeSeriesSubWidget: public Ui_TimeSeriesSubWidget {};
} // namespace Ui

class TimeSeriesSubWidget : public QWidget, public Ui::TimeSeriesSubWidget
  {
    Q_OBJECT

  public:
    TimeSeriesSubWidget(QWidget* parent = 0, const char* name = 0, Qt::WindowFlags fl = 0);
    ~TimeSeriesSubWidget();

    void displayOptimizationTab(bool displayOptTab);
    void setFramework(const int & framework);

  public slots:
    virtual CTimeSeriesTable * table();

  protected slots:
    virtual void languageChange();

    void saveDataToFile();
    virtual void init();

  private:
    int mFramework;
  };

#endif // TIMESERIESSUBWIDGET_H
